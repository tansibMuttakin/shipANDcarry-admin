<?php

namespace App\Http\Controllers;

use App\Models\VehicleModel;
use App\Models\Vehicle;
use Illuminate\Http\Request;
use Duoneos\Larablend\Http\Controllers\LarablendCrudController;

class VehiclesController extends LarablendCrudController
{
    public static function store($model, Request $request, $api)
    {
        $vehicle_model = VehicleModel::findOrFail($request->vehicle_model_id);
        $weight_taken = $vehicle_model->taken_weight;
        $body_length = $vehicle_model->body_length;
        $request->merge([
           'body_length_ignore' => $body_length,
           'weight_taken_ignore' => $weight_taken,
        ]);
        return parent::store($model, $request, $api); // TODO: Change the autogenerated stub
    }

    public static function sort_table(Request $request, $model, $id){
        $max_date = $request->max_date;
        $min_date = $request->min_date;

        if ($max_date==null || $min_date==null) {
            return redirect()->back()->with('message','Range not defined')->with('model','vehicle');
        }

        $vehicles = Vehicle::join('vehicle_models As vm','vm.id','vehicles.vehicle_model_id')
        ->join('vehicle_types As vt','vt.id','vehicles.vehicle_type_id')
        ->join('vehicle_brands As vb','vb.id','vehicles.vehicle_brand_id')
        ->join('addresses As address','address.id','vehicles.address_id')
        ->where('vehicles.created_at','>=',$min_date)
        ->where('vehicles.created_at','<=',$max_date)
        ->get(['owner_name','vm.name as model','vb.name as brand','vt.name as type'
        ,'registration_no','brta_certificate_no','fitness_certificate_no','address_line_1'
        ,'onTrip','vehicles.created_at']);
        $request->session()->flash('data', $vehicles);
        $request->session()->flash('model', 'vehicle');
        return redirect()->back();
    }
}
